# Hugging Face Spaces Configuration
# MarkItDown Testing Platform Metadata

title: "MarkItDown Testing Platform"
emoji: "ðŸš€"
colorFrom: "blue"
colorTo: "purple"
sdk: "gradio"
sdk_version: "4.44.1"
app_file: "app.py"
python_version: "3.11"

# Space configuration
models:
  - google/gemini-pro
  - microsoft/markitdown

datasets: []

# Space settings
pinned: false
license: "mit"
duplicated_from: null

# Hardware requirements (for paid tiers)
# hardware: "t4-medium"  # Uncomment for GPU acceleration

# Environment variables (public - no secrets here)
variables:
  GRADIO_THEME: "soft"
  MAX_FILE_SIZE_MB: "50"
  PROCESSING_TIMEOUT: "300"
  APP_VERSION: "1.0.0"
  
# App metadata
short_description: "Enterprise-grade document conversion testing with AI-powered analysis using Microsoft MarkItDown and Google Gemini"

# Tags for discoverability
tags:
  - document-processing
  - ai-analysis
  - markdown-conversion
  - enterprise-tools
  - quality-assessment
  - microsoft-markitdown
  - google-gemini
  - document-conversion
  - pdf-processing
  - office-documents

# Custom configuration for the space
custom:
  features:
    - "Multi-format document conversion (PDF, DOCX, PPTX, XLSX, HTML, TXT, CSV, JSON, XML)"
    - "AI-powered quality analysis with Google Gemini"
    - "Interactive visualization dashboards"
    - "Real-time processing metrics"
    - "Export capabilities (Markdown, HTML, JSON, PDF)"
    - "Enterprise-grade error handling and recovery"
    - "Performance optimization and monitoring"
  
  supported_formats:
    documents: ["PDF", "DOCX", "PPTX", "XLSX"]
    web: ["HTML", "HTM"]
    text: ["TXT", "CSV", "JSON", "XML", "RTF"]
  
  analysis_types:
    - "Quality Analysis: Comprehensive conversion assessment"
    - "Structure Review: Document hierarchy evaluation"
    - "Content Summary: Thematic analysis and insights"
    - "Extraction Quality: Data preservation assessment"
  
  technical_specs:
    max_file_size: "50MB (HF Spaces free tier)"
    processing_timeout: "5 minutes"
    memory_optimization: "Stateless architecture with automatic cleanup"
    concurrent_processing: "Async pipeline with resource management"
